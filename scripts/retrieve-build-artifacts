#!/usr/bin/env bash

if [[ -z "$SCL_BUILD_NUMBER" ]]; then
	echo "Please set SCL_BUILD_NUMBER to a valid build number."
    exit 1
fi

if [[ -z "$SCL_BUILD_BRANCH" ]]; then
	echo "Please set SCL_BUILD_BRANCH to a valid branch or PR reference."
    exit 1
fi

S3_BUCKET=safe-jenkins-build-artifacts
declare -a types=("dev" "prod")

rm -rf artifacts
for target in "$@"; do
    echo "Getting artifacts for $target"
    for type in "${types[@]}"; do
        mkdir -p "artifacts/$type/$target/release"
        (
            cd "artifacts/$type/$target/release"
            # If the key being queried doesn't exist this check prints out an ugly error message
            # that could potentially be confusing to people who are reading the logs.
            # It's not a problem, so the output is suppressed.
            key="$SCL_BUILD_BRANCH-$SCL_BUILD_NUMBER-scl-$type-$target.tar.gz"
            aws s3api head-object \
                --no-sign-request --region eu-west-2 \
                --bucket "$S3_BUCKET" --key "$key" > /dev/null 2>&1
            rc=$?
            if [[ $rc == 0 ]]; then
                echo "Retrieving $key"
                aws s3 cp --no-sign-request --region eu-west-2 "s3://$S3_BUCKET/$key" .
                tar -xvf "$key"
                rm "$key"
            else
                echo "$target has no artifacts for $type"
            fi
        )
    done
done
